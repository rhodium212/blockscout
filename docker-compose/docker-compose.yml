version: '3.9'

services:
  swapdb:
    image: postgres:14
    container_name: swapdb
    environment:
      POSTGRES_DB: petaswap
      POSTGRES_USER: peta
      POSTGRES_PASSWORD: peta
    ports:
      - "5433:5432"
    restart: always

  node:
    image: geth:0.0.1
    container_name: node
    ports:
      - "8545:8545"
      - "8546:8546"
    volumes:
      - node_data:/mnt/data/.ethereum

  redis_db:
    extends:
      file: ./services/docker-compose-redis.yml
      service: redis_db

  db-init:
    extends:
      file: ./services/docker-compose-db.yml
      service: db-init

  db:
    extends:
      file: ./services/docker-compose-db.yml
      service: db

  backend:
    depends_on:
      - db
      - redis_db
    extends:
      file: ./services/docker-compose-backend.yml
      service: backend
    ports:
      - "4000:4000"
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
      args:
        CACHE_EXCHANGE_RATES_PERIOD: ""
        API_V1_READ_METHODS_DISABLED: "false"
        DISABLE_WEBAPP: "false"
        API_V1_WRITE_METHODS_DISABLED: "false"
        CACHE_TOTAL_GAS_USAGE_COUNTER_ENABLED: ""
        CACHE_ADDRESS_WITH_BALANCES_UPDATE_INTERVAL: ""
        ADMIN_PANEL_ENABLED: ""
        RELEASE_VERSION: 5.3.2
    links:
      - db:database
    environment:
        ETHEREUM_JSONRPC_HTTP_URL: http://139.180.184.141:8545/
        ETHEREUM_JSONRPC_TRACE_URL: http://139.180.184.141:8545/
        ETHEREUM_JSONRPC_WS_URL: ws://139.180.184.141:8546/
        CHAIN_ID: '234'
        FIRST_BLOCK: 0
        TRACE_FIRST_BLOCK: 0

  visualizer:
    extends:
      file: ./services/docker-compose-visualizer.yml
      service: visualizer

  sig-provider:
    extends:
      file: ./services/docker-compose-sig-provider.yml
      service: sig-provider

  frontend:
    depends_on:
      - backend
    extends:
      file: ./services/docker-compose-frontend.yml
      service: frontend

  stats-db-init:
    extends:
      file: ./services/docker-compose-stats.yml
      service: stats-db-init

  stats-db:
    depends_on:
      - backend
    extends:
      file: ./services/docker-compose-stats.yml
      service: stats-db

  stats:
    depends_on:
      - stats-db
    extends:
      file: ./services/docker-compose-stats.yml
      service: stats

  proxy:
    depends_on:
      - backend
      - frontend
      - stats
    extends:
      file: ./services/docker-compose-nginx.yml
      service: proxy

volumes:
  node_data:
  redis-data:
